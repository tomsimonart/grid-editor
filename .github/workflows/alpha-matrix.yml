name: ðŸ’€ Alpha build

on:
  push:
    tags:
      - "v[12].[0-9]+.[0-9]+-alpha*"

jobs:
  matrix-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ""
          submodules: true

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "18.16.1"

      # WORKFLOW_NAME is used for productName extension in electron-builder.js
      - name: Set Env
        shell: bash
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=alpha" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm i

      - name: Update package.json
        run: node ./build-scripts/alpha-packageModifier.js

      - name: Build
        run: npm run export:alpha
        if: ${{ always() }}
        env:
          # gh repo token
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # windows Code signing
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}

          # Apple ID
          APPLE_ID: ${{secrets.APPLE_ID}}
          APPLE_TEAM_ID: ${{secrets.APPLE_TEAM_ID}}
          APPLE_APP_SPECIFIC_PASSWORD: ${{secrets.APPLE_APP_SPECIFIC_PASSWORD}}

          # macOS Code signing
          CSC_LINK: ${{ secrets.MAC_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_KEY_PASSWORD }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          files: build/*.*
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-unit-test:
    name: Linux Unit Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ""
          submodules: true

      - name: Setup nodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "18.16.1"

      - name: Install dependencies
        run: npm i

      - name: "Run unit tests"
        run: |
          npm test >> unit_test.txt
          cat unit_test.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-unit-test
          path: unit_test.txt

      - uses: tsickert/discord-webhook@v4.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_DEV_WEBHOOK }}
          content: "Heyo, here are the editor unit test results!"
          filename: "unit_test.txt"
